name: SonarQube Analysis

on:
  push:
    branches:
      - main # Adjust the branch name to match your project's main branch

jobs:
  sonarqube:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14' # Adjust the Node.js version as needed

    - name: Cache SonarQube scanner
      uses: actions/cache@v2
      with:
        path: ${{ runner.workspace }}/sonar-scanner
        key: sonarqube-${{ runner.os }}-${{ hashFiles('**/sonar-scanner.properties') }}
        restore-keys: |
          sonarqube-${{ runner.os }}-

    - name: Download and extract SonarQube scanner
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p ${{ runner.workspace }}/sonar-scanner
        curl -sSLo /tmp/sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
        unzip -q /tmp/sonar-scanner-cli.zip -d ${{ runner.workspace }}/sonar-scanner
        chmod +x ${{ runner.workspace }}/sonar-scanner/sonar-scanner-4.6.2.2472-linux/bin/sonar-scanner
      shell: bash

    - name: Install project dependencies
      run: npm install

    - name: Run SonarQube analysis
      run: |
        ${{ runner.workspace }}/sonar-scanner/sonar-scanner-4.6.2.2472-linux/bin/sonar-scanner \
          -Dsonar.projectKey=your_project_key \
          -Dsonar.sources=.
          -Dsonar.host.url=http://localhost:9000/tutorials?id=nodejs
          -Dsonar.login=sqa_f6c6da4d79c0018fe20fd796dac6a03f02337f18
      env:
        SONAR_SCANNER_OPTS: -Xmx512m # Adjust the memory as needed

    - name: Upload SonarQube report
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: sonarqube-report
        path: .scannerwork
